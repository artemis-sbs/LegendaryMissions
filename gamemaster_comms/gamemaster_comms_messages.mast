
//comms if has_roles(COMMS_ORIGIN_ID, 'gamemaster') and has_role(COMMS_SELECTED_ID,"__player__")
    +[$gamemaster] "Message" //comms/gamemaster/message


//comms/gamemaster/message if has_roles(COMMS_ORIGIN_ID, 'gamemaster') and has_role(COMMS_SELECTED_ID,"__player__")
    +[$gamemaster] "Back" //comms
    +[$gamemaster] "Message crew" //comms/gamemaster/message/crew


=== handle_gamemaster_message_properties
    default side_select = "tsn"
    default prop_message = gui_set_variable("prop_message", "ttt")
    p = """
    message: 'gui_input("desc: message;",var="prop_message")'
    """
    print(p)
    # This is gui variable, this is why we need client scope!
    gui_properties_set(p)
    yield idle

//comms/gamemaster/message/crew if has_roles(COMMS_ORIGIN_ID, 'gamemaster')
    gui_sub_task_schedule(handle_gamemaster_message_properties)
    

    +[$gamemaster] "Back" //comms
    +[$gamemaster] "All":
        prop_message = gui_get_variable("prop_message", "")
        for console_client_id in role("console"):
            crew = get_inventory_value(console_client_id, "CREW_NAME")
            continue if crew is None or crew == ""
            comms_broadcast(console_client_id, prop_message)


    for console_client_id in role("console"):
        crew = get_inventory_value(console_client_id, "CREW_NAME")
        console = get_inventory_value(console_client_id, "CONSOLE_TYPE", "unassigned")
        ship_id = sbs.get_ship_of_client(console_client_id)
        ship = "unassigned"
        if ship_id is not None and ship_id != 0:
            ship_obj = to_space_object(ship_id)
            if ship_obj is not None:
                ship = ship_obj.name

        continue if crew is None or crew == ""
        +[$gamemaster] "To {crew} {console} on {ship}" {"crew": crew, "console_client_id": console_client_id}:
            prop_message = gui_get_variable("prop_message", "")
            comms_broadcast(console_client_id, prop_message)


