
//comms if has_roles(COMMS_ORIGIN_ID, 'gamemaster') and has_role(COMMS_SELECTED_ID,"__player__")
    +[$gamemaster] "Message" //comms/gamemaster/message

//comms if has_role(COMMS_ORIGIN_ID, 'gamemaster') and not has_role(COMMS_SELECTED_ID, "__player__") and has_any_role(COMMS_SELECTED_ID, 'Station,ship')
    +[$gamemaster] "NPC Send to All" //comms/gamemaster/message
    +[$gamemaster] "NPC Send to Side" //comms/gamemaster/message/side

//comms/gamemaster/message if has_roles(COMMS_ORIGIN_ID, 'gamemaster') and has_role(COMMS_SELECTED_ID,"__player__")
    +[$gamemaster] "Back" //comms
    +[$gamemaster] "Message crew" //comms/gamemaster/message/crew
//comms/gamemaster/message if has_role(COMMS_ORIGIN_ID, 'gamemaster') and not has_role(COMMS_SELECTED_ID, "__player__")
    gui_sub_task_schedule(handle_gamemaster_message_properties)
    +[$gamemaster] "Back" //comms
    +[$gamemaster] "Send":
        prop_message = gui_get_variable("prop_message", "")
        comms_message(prop_message, COMMS_SELECTED_ID, role("__player__"))

//comms/gamemaster/message/side if has_role(COMMS_ORIGIN_ID, 'gamemaster') and not has_role(COMMS_SELECTED_ID, "__player__")
    +[$gamemaster] "Bacdk" //comms/gamemaster/message
    +[$gamemaster] "Send to Side":
        prop_message = gui_get_variable("prop_message", "")
        side = get_side(COMMS_SELECTED_ID)
        if side is None:
            print("SIDE IS NONE")
            jump END
        to = role("__player__") & role(side)
        comms_message(prop_message, COMMS_SELECTED_ID, to)

# //comms/gamemaster/message/send

=== handle_gamemaster_message_properties
    # default side_select = "tsn" # Not used - yet anyway
    default prop_message = gui_get_variable("prop_message", "msg")
    p = """
    message: 'gui_input("desc: message;",var="prop_message")'
    """
    # print(p)
    # This is gui variable, this is why we need client scope!
    gui_properties_set(p)
    yield idle


//comms/gamemaster/message/crew if has_roles(COMMS_ORIGIN_ID, 'gamemaster')
    gui_sub_task_schedule(handle_gamemaster_message_properties)
    
    +[$gamemaster] "Back" //comms/gamemaster/message
    +[$gamemaster] "Paste from Clipboard":
        ret = gui_clipboard_get()
        gui_set_variable("prop_message",ret)
        prop_message = gui_get_variable("prop_message")
        p = """
        message: 'gui_input("desc: message;",var="prop_message")'
        """
        # This is gui variable, this is why we need client scope!
        gui_properties_set(p)
        yield idle
    
    +[$gamemaster] "All":
        prop_message = gui_get_variable("prop_message", "")
        # prop_message = gui_clipboard_get()
        for console_client_id in role("console"):
            crew = get_inventory_value(console_client_id, "CREW_NAME")
            continue if crew is None # or crew == "" # I think if it's being sent to all then why should this be here?
            comms_broadcast(console_client_id, prop_message)


    for console_client_id in role("console"):
        crew = get_inventory_value(console_client_id, "CREW_NAME")
        console = get_inventory_value(console_client_id, "CONSOLE_TYPE", "unassigned")
        ship_id = sbs.get_ship_of_client(console_client_id)
        ship = "unassigned"
        if ship_id is not None and ship_id != 0:
            ship_obj = to_space_object(ship_id)
            if ship_obj is not None:
                ship = ship_obj.name

        continue if crew is None or crew == ""
        +[$gamemaster] "To {crew} {console} on {ship}" {"crew": crew, "console_client_id": console_client_id}:
            prop_message = gui_get_variable("prop_message", "")
            comms_broadcast(console_client_id, prop_message)

# //comms/gamemaster/message/send if has_role(COMMS_ORIGIN_ID, "gamemaster")
#     gui_sub_task_schedule(handle_gamemaster_message_properties)
#     +[$gamemaster] "Back" //comms/gamemaster/message
#     +[$gamemaster] "All":
#         prop_message = gui_get_variable("prop_message", "")
#         # comms_message

