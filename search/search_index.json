{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Legendary Missions","text":"<p>Legendary Missions is a mission script for Artemis: Cosmos</p> <p>Legendary Missions provides missions that should be similar to the out-of-the-box missions that were in Artemis: Spaceship Bridge Simulator.</p> <p>How to Play Understanding the code</p>"},{"location":"about/","title":"About","text":"<p>Legendary Missions is a mission script for Artemis: Cosmos</p> <p>It was written by:</p> <p>Doug Reichard Darrin Bright Mike Substelny and Thom Robertson</p> <p>The mission was created as part of the initial release of Artemis: Cosmos to test the engine. The goal is to provide a set of missions that match the out of the box missions provided by Artemis: Spaceship Bridge Simulator.</p> <p>It is written in a mixture of the Python and MAST Languages. </p> <p>It began as a Python. The Python Library sbs_utils was created to have a reusable python library.</p> <p>The MAST Language was then added as the main script on top of the sbs_utils library.</p> <p>MAST is a language that is similar to python in syntax, but provides:</p> <ul> <li>The Agent Model</li> <li>Managing running multiple task in parallel (in a single thread)</li> <li>Artemis: Cosmos specific functionality to:<ul> <li>Creating user interfaces</li> <li>Managing communications</li> <li>Managing Science</li> <li>Managing engineering communications</li> </ul> </li> </ul>"},{"location":"hosting/","title":"Remote server Hosting, Operator tools and Console locking","text":"<p>The Artemis Cosmos Missions can be configured to help automate startup, tools to help those having remote severs and/or running Artemis Cosmos in a virtual machine.</p> <p>There are also tools to help Operators have a consistent and quick start up  process to help their running at conventions go more smoothly.</p> <p>Console Locking helps anyone with a Bridge and desires to lock the client console PCs to specific consoles.</p>"},{"location":"hosting/#remote-server-tools","title":"Remote server tools","text":"<p>Those Running Artemis Cosmos on a remote server can run Artemis Cosmos in a manner that allows them to not always require a Remote Desktop link to start and run games.</p> <p>While not truly a headless server it should reduce the number of times needed to remote in.</p>"},{"location":"hosting/#artemis-cosmos-nearly-headless-mode","title":"Artemis Cosmos: Nearly headless mode","text":"<p>When running a Artemis Cosmos Server in some scenarios e.g. cloud based servers, it is often desired run in a headless mode.</p> <p>Artemis Cosmos still runs in a graphical manner, however there are now options to simplify the running a remote server.</p>"},{"location":"hosting/#preference-default_mission_folder","title":"Preference: default_mission_folder","text":"<p>In the Artemis Cosmos data directory there is a file *preferences.json\". In this file there is a setting to automatically start a mission when the artemis executable runs: default_mission_folder.</p> <p>By uncommenting and setting this value it will run in server mode the specified mission.</p> <p>For example:</p> <pre><code>\"default_mission_folder\":  \"LegendaryMissions\"\n</code></pre> <p>Will run the the Legendary Mission on startup.</p>"},{"location":"hosting/#remote-mission-picker","title":"Remote mission picker","text":"<p>There is also a mission script to present the mission picker remotely.</p> <p>If you do not have it, it can be obtained my opening a command line in the missions folder and typing:</p> <pre><code>.\\fetch artemis-sbs remote_mission_pick\n</code></pre> <p>You must have an internet connection for this. The fetch command retrieves missions from github.</p> <p>Alternatively you can get the mission from github.</p> <p>Mission on github</p>"},{"location":"hosting/#operator-tools","title":"Operator Tools","text":"<p>The operator tools include:</p> <ul> <li>time limit and setup.json</li> <li>default mission</li> <li>Enable Operator mode</li> <li>Main screen Operator logo</li> <li>An Operator console</li> <li>Operator Console commands</li> </ul>"},{"location":"hosting/#time-limit-and-setupjson","title":"time limit and setup.json","text":"<p>The time limit setting is available for missions, but operators in particular may want to set this setting in setup.json to a specific value to avoid retyping it all the time. Time is in minutes.</p> <pre><code>    GAME_TIME_LIMIT: 10\n</code></pre> <p>In general the setup.json is useful for setting things up to avoid constantly tuning the setting each run. Should be useful for operators.</p> <p>see here  for what settings Operators may want to tweak.</p> <p>Different defaults</p> <p>Operators that want different setups for varied crews, could copy the mission and alter the setup.json. While this takes up more space, It could be a time saver. This only needs to be don on the server.</p>"},{"location":"hosting/#default-mission","title":"Default mission","text":"<p>Look above for setting the default Mission Folder. This will help run your most common mission e.g. Legendary Missions.</p> <p>It won't prevent you from later selecting other missions.</p>"},{"location":"hosting/#enabling-operator-mode-setting","title":"Enabling Operator mode setting","text":"<p>The Legendary Missions and mission that leverage the operator Addon have a setup.json file. This file can set the default starting values as well as enable operator mode.</p> <p>To enable operator mode, set the OPERATOR_MODE enable to true.</p> <p>With operator mode turned on, a client console can act as the mission startup settings screen and it also has some useful things for operators.</p> <pre><code>\"OPERATOR_MODE\": {\n        \"enable\": true,\n        \"logo\": \"media/operator\",\n        \"show_logo_on_main\": true,\n        \"pin\": \"000000\"\n    },\n</code></pre>"},{"location":"hosting/#main-screen-operator-logo","title":"Main screen Operator logo","text":"<p>The main screen is the first thing most player will see and can look at while they wait for the game to start.</p> <p>The Operator logo is an image the Operator can control and replace to have whatever content they would like on the main screen prior to the game starting.</p> <p>Three setting effect this first operator mode needs to be enabled in all missions setup.json that this is desired in. Next show_logo_on_main needs to be set to true. Then logo should be the png folder and name for what file is desired.</p> <p>The logo name should not have the .png extension, and only png files are supported. The logo file currently need to be in every mission you would like to have Operator mode logo work.</p> <pre><code>\"OPERATOR_MODE\": {\n        \"enable\": true,\n        \"logo\": \"media/operator\",\n        \"show_logo_on_main\": true,\n        \"pin\": \"000000\"\n    },\n</code></pre> <p></p>"},{"location":"hosting/#operator-admin-console","title":"Operator Admin Console","text":"<p>By enabling OPERATOR_MODE a new console will show up in the client selection screen.</p> <p>The operator console is used to start the game and manage the game while it is running.</p> <p>First thing the Operator Admin console can require a pin to limit access to it. This pin is set in setup.json on the server.</p> <p></p> <p>Selecting the Operator Admin Console will first present a pin input screen. Successful pin entry will go to the Operator screen.</p> <p>Prior to the start of the game the Operator console displays. The Start up options regardless of the show_logo_on_main setting.</p> Note <p>Changing setting on the main screen and the Operator screen may not be reflected on both.</p>"},{"location":"hosting/#operator-console-commands","title":"Operator Console commands","text":"<p>Once the game is started the Operator console changes to a screen similar to the Game master or Admiral consoles. It provides additional information such as Time remaining and how many raiders are remaining.</p> <p></p> <p>Like the Game master and Admiral console, there are commands for the operator. These include:</p> <ul> <li>Game<ul> <li>Pause Game</li> <li>End Game</li> </ul> </li> <li>Game Time<ul> <li>Add 1 Minute</li> <li>Add 10 Minutes</li> <li>Subtract 1 Minute</li> <li>Subtract 10 minutes</li> </ul> </li> </ul>"},{"location":"hosting/#client-station-locking","title":"Client station locking","text":"<ul> <li>console_mode</li> <li>Client station pre game images</li> </ul> <p>If you desire you console PCs to be locked to a specific console. This can be accomplished.</p> <p>For example, you have a PC you want to be helm and do not want players changing the console.</p> <p>This is accomplished by setting values on the client pc.</p>"},{"location":"hosting/#console_mode","title":"console_mode","text":"<p>The client PC will have a client_strings.txt file. Editing this file and adding the key console_mode and the value for what console and what ship to assign the client to.</p> <p>The console should be one of:</p> <ul> <li>helm</li> <li>weapons</li> <li>engineering</li> <li>comms</li> <li>science</li> <li>mainscreen</li> <li>cinematic</li> <li>hangar</li> <li>admin</li> <li>admiral</li> </ul> <p>The value needs to include the ship to assign them to. The ship name must be a ship created by the mission typically this one in setup.json</p> <p>The console type and ship are separated by a semi colon</p> <pre><code>console_mode\nhelm;artemis\n</code></pre> <p>A locked console should no longer present a console selection screen , but instead show an image. </p> <p>Additional consoles can also be supported. Any console defined with  @console can be used as a console type.</p> <p></p>"},{"location":"hosting/#client-station-pre-game-images","title":"Client station pre game images","text":"<p>When the console_mode is set, the console selection selection screen in not shown instead and image is shown.</p> <p>In fact, this can be a slideshow of images.</p> <p>These image file currently need to be in every mission you would like to have console_mode to present images.</p> <p>The image files need to be in a folder matching the console id in the media folder of the mission. e.g. media/helm/image1.png</p> <p>For a slide show place several images in the folder. The system will load all png files in the folder present them in alphabetical order. Images will rotate about every 10 seconds.</p> <p>Numeric ordering</p> <p>Because it is 'alphabetic' image10.png will sort before image2.png. So it may be better to name image02.png, etc. instead.</p>"},{"location":"hosting/setup.json/","title":"setup.json","text":"<p>A file that can be used to set the default operating settings for Legendary Missions</p>"},{"location":"hosting/setup.json/#auto_start","title":"AUTO_START","text":"<p>This will skip startup selection and start the mission as soon as it is selected.</p>"},{"location":"hosting/setup.json/#operator_mode","title":"OPERATOR_MODE","text":""},{"location":"hosting/setup.json/#enable","title":"enable","text":"<p>set \"true\" to enable the operator mode. \"false\" to disable</p>"},{"location":"hosting/setup.json/#logo","title":"logo","text":"<p>You can set an image file to display one the server screen. Useful for operators.</p>"},{"location":"hosting/setup.json/#show_logo_on_main","title":"show_logo_on_main","text":"<p>Set this to show the operator  logo on the server instead of the star options. Start options will be in the admin console.</p>"},{"location":"hosting/setup.json/#pin","title":"pin","text":"<p>string needed to be typed to gain access to the operator and startup screen. The default is 000000</p>"},{"location":"hosting/setup.json/#default-selections","title":"Default selections","text":"<p>You set the default selection values for the startup settings screen.</p>"},{"location":"hosting/setup.json/#players_count","title":"players_count","text":"<p>How many player ships are available foe the missions. Values are 1 to the number of ships in the player ship list.</p>"},{"location":"hosting/setup.json/#difficulty","title":"DIFFICULTY","text":"<p>1-11</p>"},{"location":"hosting/setup.json/#world_select","title":"WORLD_SELECT","text":"<p>siege is the only valid selection currently</p>"},{"location":"hosting/setup.json/#terrain_select","title":"TERRAIN_SELECT","text":"<p>none, few, some, lots, many</p>"},{"location":"hosting/setup.json/#lethal_select","title":"LETHAL_SELECT","text":"<p>none, few, some, lots, many</p>"},{"location":"hosting/setup.json/#friendly_select","title":"FRIENDLY_SELECT","text":"<p>none, few, some, lots, many</p>"},{"location":"hosting/setup.json/#monster_select","title":"MONSTER_SELECT","text":"<p>none, few, some, lots, many</p>"},{"location":"hosting/setup.json/#upgrade_select","title":"UPGRADE_SELECT","text":"<p>none, few, some, lots, many</p>"},{"location":"hosting/setup.json/#game_time_limit","title":"GAME_TIME_LIMIT","text":"<p>0 is unlimited any other values is the number of minutes the mission will last. Pausing the mission will also pause this timer.</p> <p>The remote admin screen can be used to pause the game.</p>"},{"location":"hosting/setup.json/#player_ships","title":"player_ships","text":"<p>A list of Player ships names, side and hull keys</p> <p>You could add or reduce the number of options. e.g. Operators may Only want one player ship.</p>"},{"location":"playing/updating/","title":"Updating","text":"<p>Artemis Cosmos missions that are have their source on Github can be updated using the fetch command.</p>"},{"location":"playing/updating/#fetching","title":"Fetching","text":"<p>Open a command line terminal and navigate to the missions directory in Artemis Cosmos location</p> <p>The fetch command can be used from there.</p> <p>The fetch command takes at least 2 arguments and can optionally have 2 more</p> <pre><code>fetch GITHUB_USER REPOSITORY [FOLDER] [BRANCH/TAG]\n</code></pre> <p>GIHUB_USER is the user or organization name e.g. artemis-sbs</p> <p>REPOSITORY is the mission repository name</p> <p>FOLDER is the folder under mission to copy the mission to. This is optional. The default the REPOSITORY name.</p> <p>BRANCH/TAG is the branch or TAG to use. This is optional. The  default is main</p> Folder is needed when specifying a branch <p>Currently fetch requires the folder when specifying a branch.</p>"},{"location":"playing/updating/#updating-to-the-latest-legendarymissions","title":"Updating to the latest LegendaryMissions","text":"<p>To update the LegendaryMissions to the latest version use fetch.</p> <pre><code>.\\fetch artemis-sbs LegendaryMissions\n</code></pre> <p>Recommendation: Don't copy into an existing folder</p> <p>It is a good idea to rename or delete the existing mission folder so that the content you fetch is as clean as possible.</p> <p>Mission scripter note</p> <p>Also if you have mission that leverage the AddOns from LegendaryMissions, it is a good idea to rebuild the Addons.</p> <pre><code>cd LegendaryMissions\n.\\build_addons\n</code></pre> <p>You may need to update your story.json to the latest version. See the MAKEVERSION.bat file to see what that version is.</p>"},{"location":"playing/updating/#updating-to-a-specific-version-legendarymissions","title":"Updating to a specific version LegendaryMissions","text":"<p>You will need all four argument to fetch a specific branch. The folder is not optional when including the branch/tag.</p> <pre><code>.\\fetch artemis-sbs LegendaryMissions LegendaryMissions v1.0.6\n</code></pre>"},{"location":"playing/updating/#updating-legendarymissions-to-a-different-folder","title":"Updating LegendaryMissions to a different folder","text":"<p>If you want to keep the existing version, but try a new version you can fetch to a different folder.</p> <pre><code>.\\fetch artemis-sbs LegendaryMissions LegendaryMissionsDev\n</code></pre>"},{"location":"playing/updating/#can-you-have-multiple-versions","title":"Can you have multiple versions","text":"<p>Absolutely, you can have two versions of </p> <p>the scripting system uses version stamps to make sure the right dependencies are loaded.</p>"},{"location":"playing/updating/#i-got-the-latest-but-it-doesnt-work-or-has-issues","title":"I got the latest, but it doesn't work or has issues","text":"<p>The Latest version is where active development is occurring. While the goal is to have it always working there are times when the latest version has issues.</p> <p>Issues can include it is targeting a new unreleased version of Artemis Cosmos.</p> <p>To get back to the copy that shipped with Artemis Cosmos, fetch using the tag for that version. It is best practice to remove or renaming the mission folder before fetching.</p> <pre><code>.\\fetch artemis-sbs LegendaryMissions LegendaryMissions v1.0.6\n</code></pre>"},{"location":"script/","title":"The mission startup","text":"<p>All Artemis: Cosmos Missions start by running script.py. Without reusable code, the scripter would need to write code to listen for al the events the engine fires to the script side.</p> <p>This section begins to tell how BasicSiege runs from this startup script.py.</p>"},{"location":"script/#scriptpy-startup","title":"script.py startup","text":"<p>The scripy.py for BasicSiege leverages the sbs_utils library and MAST Runtime. The following code is added to load the library and it adds functons that implement things to handle the events from the engine.</p>  Python <pre><code>import sbslibs\nfrom  sbs_utils.handlerhooks import *\n</code></pre> <p>The sbs_utils library library adds several high level systems over the Artemis: Cosmos engine to hopefully make scripters more productive and focus on the mission scripting, rather than needing a wealth of programming experience. Scripters can focus on These systems are used to build the MAST Runtime which can be used from both Python and the MAST scripting language.</p>"},{"location":"script/#bootstrapping-the-mast-runtime","title":"Bootstrapping the MAST runtime","text":"<p>Basic Seige is written using both the scripting language, with several procedural function written in Python. In general reusable functions are written in python, and the script flow leverages MAST.</p> <p>Leverage the library makes script.py a small file that creates a StoryPage, and setting the startup MAST file story.mast to run.</p>  Python <pre><code>class MyStoryPage(StoryPage):\n    story_file = \"story.mast\"\n</code></pre> <p>Using the Gui system of sbs_utils the StoryPage class to be used for both server and client consoles. The server and each client create a gui Page, and start the story.mast main label. </p>  Python <pre><code>Gui.server_start_page_class(MyStoryPage)\nGui.client_start_page_class(MyStoryPage)\n</code></pre> <p>The code essentially is more configuration than code. But by configuring the system in this manner the server and clients can run opening up a Gui Page for drawing the content on the users see on the screen.</p> <p>For BasicSiege these gui screen are code using code in story.mast</p>"},{"location":"script/#starting-storymast-and-running-the-main-label","title":"Starting story.mast and running the main label","text":"<p>The server and each client creates their own Gui page (StoryPage). Each page creates a MAST Task that runs story.mast. A task is a execution unit in MAST that runs script. The MAST runtime manages all the running Tasks in the system.</p> <pre><code>stateDiagram-v2\nstate fork_state \n\nstate \"server\" as srv\nstate \"client 1\" as c1\nstate \"client ...\" as cn\nstate \"MAST runtime\" as m\n\n    script.py --&gt; story.mast\n    story.mast --&gt; m\n\n    state m {\n    srv\n    --\n    c1\n    --\n    cn\n    }\n</code></pre> <p>The very first thing story.mast mast runs in each task is the main label.</p> <p>All content prior to the first label in a MAST file in referred to as the main label. </p> What is a Label <p>A label is a section of code in a mast file. Labels can be used as a heading, and can be used to redirect code to that point in the code i.e. the code can jump to a label rerouting the code to that point.</p> <p>Labels are denoted by 3 or more equals signs followed by a name followed by 3 or more equal signs. names are letter, numbers, or underscores no spaces, but spaces can be before or after the name.</p>  MAST <pre><code># Code before the first label is in \"main\"\n\n===== my_label ====\n# The label code\n</code></pre> <p>All files imported, will have their own main label's code merged into a single main label.</p> Imports <p>imports are a way to include code from other files. In this way you can break your script into smaller chucks for organization, and reuse possibilities.</p> <p>Imported files are imported in order they occur in listed, and the files they imported are import with them. However, if a file that has been imported already it will not be imported again.</p> <p>Imports in mast are in the main label area of a file. An import statement can import MAST code or python code.</p>  MAST <pre><code>include basic_ai.mast\ninclude map.mast\ninclude upgrade.py\ninclude upgrade.mast\n</code></pre> <p>The main label runs for the server and each client. However, the assignment of shared data is only run on the server to avoid resetting the data whenever a client console connects.</p> what is shared data <p>Share data is by server and all clients reference thee same value In the main label the assigning of these values only runs once</p> <p>Data that is not shared, the server and all client have their own version of the variable.</p>  MAST <pre><code># Shared by server and all clients\nshared DIFFICULTY=5\nshared PLAYER_COUNT = 1\n# Unique for each client + server\nuser_name = \"Player\"\nconsole_name = \"helm\"\n</code></pre> <p>When the main label ends, it then route to the server or client gui. The label it jumps to is set via the gui_reroute_server or gui_reroute_clients functions. These functions take a label to run when main completes. </p>  MAST <pre><code>gui_reroute_server(\"start_server\")\ngui_reroute_clients(\"client_main\")\n</code></pre> <p>If their is no gui reroute, then the main label will execute the first label in the main file (story.mast) as is customary for labels the continue through labels they encounter the labels is said it falls through to the next label.</p> Label fall through <p>The below example will print A and B when a_label executes because it falls through and runs b_label.</p>  MAST <pre><code>==== a_label ===\nprint(\"A\")\n\n==== b_label ===\nprint(\"B\")\n</code></pre> <p>Remove this its examples to copy from</p>  Python:simple-windowsterminal: Cmd-line  MAST <pre><code>import sbslibs\nfrom  sbs_utils.handlerhooks import *\n</code></pre> <pre><code>import sbslibs\nfrom  sbs_utils.handlerhooks import *\n</code></pre> <pre><code>import sbslibs\nfrom  sbs_utils.handlerhooks import *\n</code></pre>"},{"location":"script/ai/","title":"AI in Legendary Missions","text":"<p>There are several areas that need to have NPC Agents to have behavior.</p> <p>The various npc ships: raiders, friendly, civilian, stations. As well the npcs in Engineering: damcons, etc.</p> <p>The AI wi be described in this section.</p> <pre><code>stateDiagram-v2\n    [*] --&gt; handle_route_spawn\n    state route &lt;&lt;choice&gt;&gt;\n    handle_route_spawn --&gt; route\n        route --&gt; ai_player: if has_role(\"__player__\")\n        route --&gt; ai_task_friendly: if has_roles(\"tsn, friendly\")\n        route --&gt; spawn_task_station: if has_roles(\"tsn, station\")\n        route --&gt; raider_start: if has_role(\"raider\") \n</code></pre>"},{"location":"script/ai/civilian/","title":"civilian","text":"<ul> <li>Describe  <ul> <li>the give orders logic</li> <li>the initial science scan</li> </ul> </li> </ul>"},{"location":"script/ai/friendly/","title":"friendly","text":"<ul> <li>Describe  <ul> <li>the give orders logic</li> <li>the initial science scan</li> </ul> </li> </ul> <p>keep separate from civilian because it may change over time to be different</p>"},{"location":"script/ai/raider/","title":"Enemy (Raider) AI","text":""},{"location":"script/ai/raider/#legendary-missions-ai","title":"Legendary Missions AI","text":"<p>The enemy AI in a Legendary Missions Map is defined in </p> <p></p> <p> </p> <p>Example</p>  mast doc1.md <pre><code>if bar():\n    \"\"\"Hello, world!\n\n    # Tips\n\n    - Stay hydrated.\n    \"\"\"\n</code></pre> <pre><code>::: foo.bar\n</code></pre> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"script/ai/station/","title":"Station AI","text":""},{"location":"script/ai/station/#munition-building","title":"Munition building","text":""},{"location":"script/ai/station/#docking","title":"Docking","text":""},{"location":"script/gui/server/","title":"The server startup","text":"<p>On the sever, the start_server label is called after the main label.</p>"},{"location":"script/maps/","title":"New Map system post 1.0","text":"<p>This will use a system of grids and tiles.</p>"},{"location":"script/maps/#layers-tilemap-grids-and-tiles","title":"Layers, Tilemap grids and tiles","text":"<p>The system uses concepts of:</p> <ul> <li>Layers</li> <li>Tile map Grids</li> <li>tile indicators</li> <li>Tiles</li> </ul> <p>Layers define grids and tiles specific to that layer. grids are a 2 dimensional array of indicators indicators define an abstract of what type of tile is in a grid location tiles define the concrete details of the contents of a grid location</p> <p>Tiles are typically define a new layer. </p>"},{"location":"script/maps/#easy-grid-scripting","title":"Easy grid scripting","text":"<p>Inspired by how retro game scripting define sprites. The system supports a simple string grid to define the grid.</p> <p>For example, this defines a small galaxy with 3 star systems.</p> <pre><code>//tile/galaxy\n\nlabel grid= \"\"\"\n........s...\n...s........\n........s...\n\"\"\"\n</code></pre>"},{"location":"script/maps/#layers-of-tilemap-grids","title":"Layers of tilemap grids","text":"<ul> <li>Galaxy layer (abstract size)</li> <li>Star system layer (abstract size)</li> <li>planetary layer (1Mx1M)</li> <li>Satellite layer (100kx100k) </li> <li>Sector layer (10kx10k)</li> <li> <p>Object layer (1kx1k)</p> </li> <li> <p>galaxy systems pesudo endless grid or defined grid</p> <ul> <li>star system indicators</li> <li>dead space</li> </ul> </li> <li> <p>star system of grid of star system tiles no scale/distance implied by grid</p> <ul> <li>star indicators</li> <li>planetary indicators</li> </ul> </li> </ul> <p>These will have actual distances and will be in engine</p> <ul> <li> <p>planetary systems are 1Mx1M with 100kx100k satellite indicators</p> <ul> <li>moon </li> <li>settlements (Better name?)</li> <li>dead space (Empty/light terrain)</li> </ul> </li> <li> <p>settlement satellites are 100kx100k with 10kx10k sector tiles</p> <ul> <li>sector tiles<ul> <li>terrain tiles</li> <li>station tiles</li> </ul> </li> </ul> </li> <li> <p>sectors systems are 10kx10k (1kx1k tiles ?)</p> <ul> <li>station actual placement</li> <li>mines</li> <li>terrain</li> <li>ship tiles<ul> <li>fleet tiles</li> <li>npc tiles</li> <li>player tiles</li> </ul> </li> </ul> </li> </ul>"},{"location":"script/maps/#galaxy-level","title":"Galaxy level","text":"<p>The galaxy is a grid representing a grid items is either a star system or dead space</p> <p>By default the galaxy will just be an 'endless' grid generated by seeded random numbers.</p> <p></p>"},{"location":"script/maps/#user-defined-galaxy","title":"user defined galaxy","text":"<p>A galaxy can be defined with a galaxy tile</p> <pre><code>//tile/galaxy\n\nlabel grid =\"\"\"\n........s...\n...s........\n........s...\n\"\"\"\n</code></pre>"},{"location":"script/maps/#star-system-tiles-generation-rules","title":"star system tiles generation rules","text":"<p>start systems is sized based on the number of stars an the max number of planets.</p> <p>2*max_planet x (number_of suns+1)/2</p> <p>so if you have 3 suns, with 8, 11, 15 planets the grid is 30 x 4</p> <p>Conceptually this ia a 30Mm x 4Mm, but orbit diameters can be depicted differently as the grids are ,ore about the count than actual distance. </p> <p></p> <ul> <li>A star system indicators specifies the number of star section tiles . Think of it a as deck of cards with:<ul> <li>one-3 stars tiles are star being 500k - 1M in diameter cards</li> <li>7-15 planetary systems cards</li> <li>with 83 - 93 dead space cards</li> <li>it is not meant to make orbital sense</li> </ul> </li> </ul> <p>These cards are 'shuffled' and fill in the grid. This can be done is a seeded pseudo random fashion so random, but repeatable if desired</p> <p>It would be nice if the stars where visible in the sky box. You can not travel to a star it is sure death.</p>"},{"location":"script/maps/#user-defined-star-system-tiles","title":"User defined star system tiles","text":"<p>digits specify stars alpha specifies planetary systems</p> <p>this is a 15x10 example for simplicity, but  galaxies can be sized in a rectangular grid</p> <pre><code>//tile/star/milk\n\nlabel grid = \"\"\"\n..c............\n..1..a.........\n..b............\n...............\n..........d....\n........g..2.e.\n.........f.....\n.h.............\n..3.i..........\n...............\n\"\"\"\n\nmatch TILE.code:\n    case \"a\":\n        TILE_OBJ.name = \"Earth\"\n\n--- some_logic\n# These are labels and can define logic\n</code></pre>"},{"location":"script/maps/#a-planetary-system","title":"A planetary system","text":"<p>A planetary system is 1Mmx1Mm or 100 satellite tiles 100kx100k</p> <p>A generated planetary system is randomized in the follow manner.</p> <ul> <li>A satellite system Tile specifies the type of tile to place. <ul> <li>m+M one-4 moon tiles,  moons being 50k - 100k in diameter </li> <li>e+E one-7 celestial event tiles, black hole etc. 50k - 100k in diameter</li> <li>c+C - 7 - 15 colonies</li> <li>The rest are terrain cards, dead space, asteroids, pickups, etc</li> <li>digit means a user defined tile</li> <li>it is not meant to make orbital sense</li> </ul> </li> </ul>"},{"location":"script/maps/#user-defined-planetary-system","title":"User defined planetary system","text":"<pre><code>//tile/planet \"Keplar\"\n\nlabel grid =\"\"\"\n.......e..\n.s........\n..T.::.T..\n....::T.s.\n...1......\n..e.:..T..\n..TT......\n..s.T..T..\n.....T.s..\n...::::...\n1=tile/satellite/beachwood\n\"\"\"\n\n#\n# \n#\n</code></pre>"},{"location":"script/maps/#a-satellite-system","title":"A satellite system","text":"<p>A satellite system is 100kx100k or 100 10kx10k grid of 10K orbital system tiles</p> <p>A generated satellite system is randomized in the follow manner.</p> <ul> <li>A orbital system Tile specifies the type of tile to place. <ul> <li>e+E one-7 celestial event tiles, black hole etc. 5k - 10k in diameter</li> <li>s+S 7-15 station cards</li> <li>f+F 1-3 FTL tiles JUmp gates and other FTL constructs</li> <li>with 71 - 90 terrain cards, dead space, asteroids, pickups, etc</li> <li>digit means a user defined tile</li> <li>it is not meant to make orbital sense</li> </ul> </li> </ul> <p>A star system contains the number of 'planets' and the number of stations and moons around a planet</p>"},{"location":"script/maps/#user-defined-planetary-system_1","title":"User defined planetary system","text":"<pre><code>//tile/satelite \"Keplar\"\n\nlabel grid =\"\"\"\n......e..\n.s..f.....\n..T.::.T..\n....::T.s.\n...1......\n..e.:..T..\n..TT.m....\n..s.T..T..\n...F.T.s..\n...::::...\n1=tile/sector/beachwood_station\n\"\"\"\n\n#\n# \n#\n</code></pre>"},{"location":"script/maps/#sector-tiles","title":"Sector tiles","text":"<pre><code>//tile/sector/beachwood_station \"Command Station\" if tile_opts.is_friendly\n\nlabel grid =\"\"\"\n:aA.A.:...\nA:...:....\n.a........\n.......p..\n..:mmm:...\n..m.s.m:..\n......:...\n:.........\n:::.....::\n::::...:::\ns=name:Beachwood Station;artid:starbase_command;side=tsn;\n\"\"\"\n\n#\n# \n#\n</code></pre>"},{"location":"script/maps/#scripted-tiles","title":"Scripted tiles","text":"<pre><code>//tile/sector/station \"Io\"\nnpc_spawn(...)\n</code></pre>"},{"location":"script/maps/#blackhole-and-moon","title":"Blackhole and moon","text":"<p>Blackhole and moons can be can be scripted </p> <pre><code>//tile/sector/black_hole \"Black Hole\"\n#\n# Completely scripted tile\n#\nx = TILE.pos.x\ny = TILE.pos.y\nz = TILE.pos.z\n\n_prefix = \"XEA\"\n\nbh_name_number = get_inventory_value(SHARED, \"bh_name_number\", 0)\nr_name = f\"{random.choice(_prefix)} {str(call_signs[bh_name_number]).zfill(2)}\"\nbh_name_number = (enemy_name_number+1)%99\nset_inventory_value(SHARED, \"bh_name_number\", bh_name_number)\n\nbh = to_object(terrain_spawn(x,y,z, r_name, \"#,black_hole\", \"maelstrom\", \"behav_maelstrom\"))\nbh.engine_object.exclusion_radius = 100 # event horizon\nblob = bh.data_set\nblob.set(\"gravity_radius\", gravity_radius, 0)\nblob.set(\"gravity_strength\", gravity_strength, 0)\nblob.set(\"turbulence_strength\", turbulence_strength, 0)\nblob.set(\"collision_damage\", collision_damage, 0)\n</code></pre>"},{"location":"script/maps/#fleet-tiles","title":"Fleet tiles","text":"<p>Used for defining fleets an update to the current tables</p> <pre><code>//tile/fleet if tile_opts.DIFFICULTY==5\n\nlabel grid =\"\"\"\n..........\n..........\n..........\n....a.....\n...b.b....\n..c.c.c...\n...d.e....\n..........\n..........\n..........\ne=tile:npc/wolf_spider;\n\"\"\"\n#\n# * denotes defaults if not specified\n#\nTILE.OBJ.side=tsn\nTILE.OBJ.artid = \"tsn_escort\"\nif TILE.code == \"a\":\n    TITLE.OBJ.artid = \"tsn_destroyer\"\n\nif TILE.code == \"a\":\n    TITLE.OBJ.artid = \"tsn_destroyer\"\n\nif TILE.code == \"a\":\n    TITLE.OBJ.artid = \"tsn_lightcrusier\"\n\n#\n# These are still labels and \n# they run after a tile is spawned \n#\nsome_value = 5\n\n--- fleet_logic\n# this is the brain logic\n# Default keeps formation?\n\njump fleet_logic\n</code></pre>"},{"location":"script/maps/#npc-tile","title":"NPC tile","text":"<p>Ideal for creating story character NPC</p> <pre><code>//tile/npc/wolf_spider \"Wolf Spider\"\n\"npc=name:intrepid;artid:tsn_lightcrusier;\n#\n# These are still labels and \n# they run after a tile is spawned \n#\nsome_value = 5\n\n--- story_logic\n\n... etc ...\n</code></pre>"},{"location":"script/maps/#tiles-al-the-way-down","title":"Tiles al the way down","text":"<p>```</p>"},{"location":"script/maps/#_1","title":"New Map system post 1.0","text":""},{"location":"script/maps/#the-default-label-for-a-planetary-code-s","title":"The default label for a planetary code s","text":""},{"location":"script/maps/#_2","title":"New Map system post 1.0","text":""},{"location":"script/maps/#_3","title":"New Map system post 1.0","text":"<p>//tile/sector/s </p> <p>````</p>"},{"location":"script/pickups/upgrades/","title":"Index","text":"<p>Should cross reference wreck het too</p>"}]}